[{"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\index.js":"1","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\App.js":"2","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\reportWebVitals.js":"3","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\Layout.js":"4","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\hoc\\Auxiliary.js":"5","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticlesFilter.js":"6","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticleSearch.js":"7","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticleCategories.js":"8","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\PopularArticles\\PopularArticlesList.js":"9","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\PopularArticles\\SinglePopularArticle.js":"10","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\ArticlesNavigation.js":"11","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\FilteredArticles.js":"12","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\FilteredArticlesList.js":"13","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\SingleArticle.js":"14","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\MainArticleLayout\\MainArticleLayout.js":"15","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\MenuBar.js":"16","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Api.js":"17","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\MainArticleLayout\\ArticleSearchContext.js":"18","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\AccountLayout.js":"19","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\PlayersLayout.js":"20","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\CalendarLayout.js":"21","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\SingleArticleLayout.js":"22","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\SingleArticleView.js":"23","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\CommentsList.js":"24","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\Comment.js":"25","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\DeleteCommentAlert.js":"26","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\AddComment.js":"27","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SingleGamesTable.js":"28","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SearchBar.js":"29","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\hooks\\useOutsideClick.js":"30","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SelectedPlayers.js":"31","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SeasonAveragesTable.js":"32","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SingleGamesChart.js":"33","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\ChartFilters.js":"34","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\SignUpDrawer.js":"35","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\LogInDrawer.js":"36","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\CalendarNavBar.js":"37","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\Match.js":"38","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\Day.js":"39","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\SelectedTeams.js":"40","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\TeamFilterBar.js":"41","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\NotAuthorized.js":"42","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\FavouriteTeamsBar.js":"43","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\FavouritePlayersBar.js":"44","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\NewArticleLayout.js":"45","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\ManageArticlesLayout.js":"46","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\EditDeleteArticle.js":"47","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\ArticleToEditView.js":"48","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\assets\\teams.js":"49","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\assets\\stats.js":"50"},{"size":500,"mtime":499162500000,"results":"51","hashOfConfig":"52"},{"size":2578,"mtime":1610390865830,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"52"},{"size":1221,"mtime":1608933634378,"results":"55","hashOfConfig":"52"},{"size":63,"mtime":1608580430229,"results":"56","hashOfConfig":"52"},{"size":675,"mtime":1609542223968,"results":"57","hashOfConfig":"52"},{"size":983,"mtime":1610364452581,"results":"58","hashOfConfig":"52"},{"size":1424,"mtime":1610364476850,"results":"59","hashOfConfig":"52"},{"size":662,"mtime":1610364492580,"results":"60","hashOfConfig":"52"},{"size":935,"mtime":1610372001086,"results":"61","hashOfConfig":"52"},{"size":1078,"mtime":1609542270517,"results":"62","hashOfConfig":"52"},{"size":415,"mtime":1608912896076,"results":"63","hashOfConfig":"52"},{"size":835,"mtime":1609856858956,"results":"64","hashOfConfig":"52"},{"size":2038,"mtime":1610374358148,"results":"65","hashOfConfig":"52"},{"size":6272,"mtime":1610390935360,"results":"66","hashOfConfig":"52"},{"size":3433,"mtime":1610368904967,"results":"67","hashOfConfig":"52"},{"size":4470,"mtime":1610637345792,"results":"68","hashOfConfig":"52"},{"size":92,"mtime":1608912899514,"results":"69","hashOfConfig":"52"},{"size":4510,"mtime":1610385719482,"results":"70","hashOfConfig":"52"},{"size":2269,"mtime":1610637754533,"results":"71","hashOfConfig":"52"},{"size":4089,"mtime":1610460545285,"results":"72","hashOfConfig":"52"},{"size":898,"mtime":1608997714130,"results":"73","hashOfConfig":"52"},{"size":1860,"mtime":1609854802860,"results":"74","hashOfConfig":"52"},{"size":1667,"mtime":1610375939841,"results":"75","hashOfConfig":"52"},{"size":3665,"mtime":1610384723329,"results":"76","hashOfConfig":"52"},{"size":1029,"mtime":1608990502989,"results":"77","hashOfConfig":"52"},{"size":1774,"mtime":1610384292019,"results":"78","hashOfConfig":"52"},{"size":3843,"mtime":1610370105606,"results":"79","hashOfConfig":"52"},{"size":3063,"mtime":1610637932589,"results":"80","hashOfConfig":"52"},{"size":513,"mtime":1609016753924,"results":"81","hashOfConfig":"52"},{"size":604,"mtime":1610320453339,"results":"82","hashOfConfig":"52"},{"size":3200,"mtime":1610379549391,"results":"83","hashOfConfig":"52"},{"size":4390,"mtime":1610638052472,"results":"84","hashOfConfig":"52"},{"size":125,"mtime":1609079787713,"results":"85","hashOfConfig":"52"},{"size":11153,"mtime":1610988904522,"results":"86","hashOfConfig":"52"},{"size":4356,"mtime":1610988923552,"results":"87","hashOfConfig":"52"},{"size":970,"mtime":1610368329837,"results":"88","hashOfConfig":"52"},{"size":1471,"mtime":1610374726447,"results":"89","hashOfConfig":"52"},{"size":838,"mtime":1610368614637,"results":"90","hashOfConfig":"52"},{"size":571,"mtime":1609258619410,"results":"91","hashOfConfig":"52"},{"size":1104,"mtime":1609855630926,"results":"92","hashOfConfig":"52"},{"size":459,"mtime":1609359456666,"results":"93","hashOfConfig":"52"},{"size":601,"mtime":1609855665171,"results":"94","hashOfConfig":"52"},{"size":2669,"mtime":1610404674952,"results":"95","hashOfConfig":"52"},{"size":5424,"mtime":1610991555459,"results":"96","hashOfConfig":"52"},{"size":967,"mtime":1609511863495,"results":"97","hashOfConfig":"52"},{"size":2023,"mtime":1609857460828,"results":"98","hashOfConfig":"52"},{"size":6025,"mtime":1609860957935,"results":"99","hashOfConfig":"52"},{"size":4424,"mtime":1609971811494,"results":"100","hashOfConfig":"52"},{"size":1202,"mtime":1610318708188,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"i789pi",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"104"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"104"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\index.js",[],["221","222"],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\App.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\reportWebVitals.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\Layout.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\hoc\\Auxiliary.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticlesFilter.js",["223","224"],"import React, { Component } from \"react\";\r\nimport { RadioGroup, Stack, Radio } from \"@chakra-ui/react\";\r\nimport ArticleSearch from \"./ArticleSearch\";\r\nimport ArticleCategories from \"./ArticleCategories\";\r\n\r\nclass ArticlesFilter extends Component {\r\n  render() {\r\n    return (\r\n      <Stack margin={5}>\r\n        <ArticleSearch search={this.props.search} />\r\n        <ArticleCategories\r\n          categories={this.props.categories}\r\n          filterByCategory={this.props.getByCategory}\r\n          filterByAll={this.props.resetFilters}\r\n          filterByFavourites={this.props.filterByFavourites}\r\n        />\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticlesFilter;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticleSearch.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\ArticlesFilter\\ArticleCategories.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\PopularArticles\\PopularArticlesList.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\PopularArticles\\SinglePopularArticle.js",["225"],"import React from \"react\";\r\nimport {\r\n  Avatar,\r\n  Flex,\r\n  WrapItem,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SinglePopularArticle = (props) => {\r\n  const { publicist, id, title, dateOfPublication } = props.article;\r\n\r\n  return (\r\n    <Link to={`/artykul/${id}`}>\r\n      <Flex\r\n        margin=\"5px\"\r\n        p={5}\r\n        shadow=\"lg\"\r\n        borderWidth=\"1px\"\r\n        backgroundColor=\"rgba(20, 89, 245, 0.08)\"\r\n      >\r\n        <Avatar name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\r\n\r\n        <Box textAlign=\"left\" marginLeft={2}>\r\n          <Heading fontSize=\"l\">{title}</Heading>\r\n          <Flex>\r\n            <Text>{publicist?.login}</Text>\r\n            <Spacer />\r\n            <Text>{dateOfPublication.split(\"T\")[0]}</Text>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default SinglePopularArticle;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\ArticlesNavigation.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\FilteredArticles.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\FilteredArticlesList.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\FilteredArticles\\SingleArticle.js",["226","227","228"],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Image,\r\n  Tag,\r\n  Wrap,\r\n  WrapItem,\r\n  Stack,\r\n  Text,\r\n  HStack,\r\n  Spacer,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { ChatIcon } from \"@chakra-ui/icons\";\r\nimport { getArticleImage } from \"../../components/Api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SingleArticle = (props) => {\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getArticleImage(props.id).then((response) => {\r\n      setImage(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const property = {\r\n    imageAlt: \"Nie załadowano obrazka\",\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      maxW=\"m\"\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      overflow=\"hidden\"\r\n      backgroundColor=\"rgba(20, 89, 245, 0.08)\"\r\n    >\r\n      <Link to={`/artykul/${props.id}`}>\r\n        <Image src={image[0]?.url} alt={property.imageAlt} width=\"100%\" />\r\n        <Box p=\"6\">\r\n          <Flex alignItems=\"baseline\" marginBottom={2}>\r\n            <WrapItem>\r\n              {props.tags.split(\";\").map((tag) => {\r\n                return (\r\n                  <Tag\r\n                    borderRadius=\"full\"\r\n                    px=\"2\"\r\n                    colorScheme=\"red\"\r\n                    key={tag}\r\n                    marginRight=\"5px\"\r\n                  >\r\n                    {tag}\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </WrapItem>\r\n            <Spacer />\r\n            <WrapItem>\r\n              <Text fontWeight=\"semibold\">{props.date}</Text>\r\n            </WrapItem>\r\n          </Flex>\r\n          <Stack>\r\n            <Text textAlign=\"left\" fontWeight=\"semibold\">\r\n              {props.title}\r\n            </Text>\r\n            <Text textAlign=\"justify\" noOfLines={3}>\r\n              {props.content}\r\n            </Text>\r\n            <Box textAlign=\"right\" justifyContent=\"space-evenly\">\r\n              {props.comments} <ChatIcon />\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      </Link>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SingleArticle;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\MainArticleLayout\\MainArticleLayout.js",["229"],"import React, { Component } from \"react\";\r\nimport { Grid, Box, GridItem } from \"@chakra-ui/react\";\r\nimport ArticlesFilter from \"../../containers/ArticlesFilter/ArticlesFilter\";\r\nimport PopularArticlesList from \"../../containers/PopularArticles/PopularArticlesList\";\r\nimport FilteredArticles from \"../../containers/FilteredArticles/FilteredArticles\";\r\nimport axios from \"axios\";\r\nimport { ArticleSearchContext } from \"./ArticleSearchContext\";\r\n\r\nclass MainArticleLayout extends Component {\r\n  state = {\r\n    categories: [],\r\n    popularArticles: [],\r\n    filteredArticles: [],\r\n    firstSearchFilter: true,\r\n    firstCategoryFilter: true,\r\n    searchContextValue: {\r\n      currentPage: 0,\r\n      isLastPage: false,\r\n      navButtonFunction: (nextPage) => {\r\n        this.getAllArticles(nextPage, true);\r\n      },\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/nba/articles/categories\")\r\n      .then((response) => {\r\n        this.setState({ categories: response.data });\r\n      });\r\n    axios\r\n      .get(\"http://localhost:8080/nba/articles/popular/5\")\r\n      .then((response) => {\r\n        this.setState({ popularArticles: response.data });\r\n      });\r\n\r\n    this.getAllArticles(this.state.searchContextValue.currentPage);\r\n  }\r\n\r\n  searchArticleByTag = (tag, page, isPaging = false) => {\r\n    axios\r\n      .get(`http://localhost:8080/nba/articles/tags/${tag}/${page}`)\r\n      .then((response) => {\r\n        if (isPaging) {\r\n          this.setState({\r\n            filteredArticles: [\r\n              ...this.state.filteredArticles,\r\n              ...response.data.content,\r\n            ],\r\n            searchContextValue: {\r\n              navButtonFunction: (nextPage) => {\r\n                this.searchArticleByTag(tag, nextPage, true);\r\n              },\r\n              isLastPage: response.data.last,\r\n              currentPage: page,\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            filteredArticles: response.data.content,\r\n            searchContextValue: {\r\n              navButtonFunction: (nextPage) => {\r\n                this.searchArticleByTag(tag, nextPage, true);\r\n              },\r\n              isLastPage: response.data.last,\r\n              currentPage: 0,\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  searchArticleByCategory = (category, page, isPaging = false) => {\r\n    axios\r\n      .get(`http://localhost:8080/nba/articles/category/${category}/${page}`)\r\n      .then((response) => {\r\n        if (isPaging) {\r\n          this.setState({\r\n            filteredArticles: [\r\n              ...this.state.filteredArticles,\r\n              ...response.data.content,\r\n            ],\r\n            searchContextValue: {\r\n              currentPage: page,\r\n              isLastPage: response.data.last,\r\n              navButtonFunction: (nextPage) => {\r\n                this.searchArticleByCategory(category, nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            filteredArticles: response.data.content,\r\n            searchContextValue: {\r\n              currentPage: 0,\r\n              isLastPage: response.data.last,\r\n              navButtonFunction: (nextPage) => {\r\n                this.searchArticleByCategory(category, nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  getAllArticles = (page = 0, isPaging = false) => {\r\n    axios\r\n      .get(`http://localhost:8080/nba/articles/all/${page}`)\r\n      .then((response) => {\r\n        if (isPaging) {\r\n          this.setState({\r\n            filteredArticles: [\r\n              ...this.state.filteredArticles,\r\n              ...response.data.content,\r\n            ],\r\n            searchContextValue: {\r\n              currentPage: page,\r\n              isLastPage: response.data.last,\r\n              navButtonFunction: (nextPage) => {\r\n                this.getAllArticles(nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            filteredArticles: response.data.content,\r\n            searchContextValue: {\r\n              currentPage: 0,\r\n              isLastPage: response.data.last,\r\n              navButtonFunction: (nextPage) => {\r\n                this.getAllArticles(nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  searchArticleByFavourites = (isPaging = false) => {\r\n    axios\r\n      .get(`http://localhost:8080/nba/articles/favourite/${this.props.user.id}`)\r\n      .then((response) => {\r\n        if (isPaging) {\r\n          this.setState({\r\n            filteredArticles: [\r\n              ...this.state.filteredArticles,\r\n              ...response.data,\r\n            ],\r\n            searchContextValue: {\r\n              currentPage: 0,\r\n              isLastPage: true,\r\n              navButtonFunction: (nextPage) => {\r\n                this.getAllArticles(nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        } else {\r\n          this.setState({\r\n            filteredArticles: response.data,\r\n            searchContextValue: {\r\n              currentPage: 0,\r\n              isLastPage: true,\r\n              navButtonFunction: (nextPage) => {\r\n                this.getAllArticles(nextPage, true);\r\n              },\r\n            },\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ArticleSearchContext.Provider value={this.state.searchContextValue}>\r\n        <Grid templateColumns=\"repeat(3, 1fr)\" gap={10}>\r\n          <GridItem>\r\n            <ArticlesFilter\r\n              categories={this.state.categories}\r\n              search={this.searchArticleByTag}\r\n              getByCategory={this.searchArticleByCategory}\r\n              resetFilters={this.getAllArticles}\r\n              filterByFavourites={this.searchArticleByFavourites}\r\n            />\r\n          </GridItem>\r\n          <GridItem>\r\n            <FilteredArticles filteredArticles={this.state.filteredArticles} />\r\n          </GridItem>\r\n          <GridItem>\r\n            <PopularArticlesList popularArticles={this.state.popularArticles} />\r\n          </GridItem>\r\n        </Grid>\r\n      </ArticleSearchContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainArticleLayout;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\MenuBar.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Api.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\MainArticleLayout\\ArticleSearchContext.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\AccountLayout.js",["230","231","232","233"],"import { Box, Button, Grid, Heading, Select, Stack } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport {\r\n  getFavouriteTeams,\r\n  getAllTeams,\r\n  addFavouritePlayer,\r\n  addFavouriteTeam,\r\n  deleteFavouritePlayer,\r\n  deleteFavouriteTeam,\r\n  getFavouritePlayers,\r\n} from \"../../Api\";\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\nimport FavouriteTeamsBar from \"./FavouriteTeamsBar\";\r\nimport FavouritePlayersBar from \"./FavouritePlayersBar\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nconst AccountLayout = () => {\r\n  const [allTeams, setAllTeams] = React.useState([]);\r\n  const [favouriteTeams, setFavouriteTeams] = React.useState([]);\r\n  const [favouritePlayers, setFavouritePlayers] = React.useState([]);\r\n  const { user } = React.useContext(UserContext);\r\n\r\n  React.useEffect(() => {\r\n    getAllTeams().then((response) => {\r\n      setAllTeams(response.data);\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getFavouriteTeams(user.id).then((response) => {\r\n      setFavouriteTeams(response.data);\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getFavouritePlayers(user.id).then((response) => {\r\n      setFavouritePlayers(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\r\n      <Grid\r\n        templateColumns=\"repeat(2, 1fr)\"\r\n        gap={6}\r\n        borderWidth=\"5px\"\r\n        margin={5}\r\n        padding={5}\r\n        borderRadius=\"lg\"\r\n        borderColor=\"rgba(57, 118, 223, 0.3)\"\r\n      >\r\n        <Heading size=\"lg\">Ulubione drużyny</Heading>\r\n        <FavouriteTeamsBar\r\n          teams={allTeams}\r\n          addTeamToFavourites={(teamID) => {\r\n            if (!favouriteTeams.find((fav) => fav.id === Number(teamID))) {\r\n              addFavouriteTeam(user.id, teamID).then(() => {\r\n                setFavouriteTeams([\r\n                  ...favouriteTeams,\r\n                  allTeams.find((t) => t.id === Number(teamID)),\r\n                ]);\r\n                console.log(favouriteTeams);\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <Box>\r\n          {favouriteTeams.map((favouriteTeam) => {\r\n            return (\r\n              <Button\r\n                key={favouriteTeam.id}\r\n                margin={2}\r\n                rightIcon={<CloseIcon boxSize={3} />}\r\n                minWidth=\"250px\"\r\n                colorScheme=\"blue\"\r\n                variant=\"outline\"\r\n                onClick={() =>\r\n                  deleteFavouriteTeam(user.id, favouriteTeam.id).then(() => {\r\n                    setFavouriteTeams(\r\n                      favouriteTeams.filter(\r\n                        (team) => team.id !== favouriteTeam.id\r\n                      )\r\n                    );\r\n                  })\r\n                }\r\n              >\r\n                {favouriteTeam.full_name}\r\n              </Button>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Grid>\r\n      <Grid\r\n        templateColumns=\"repeat(2, 1fr)\"\r\n        gap={6}\r\n        borderWidth=\"5px\"\r\n        margin={5}\r\n        padding={5}\r\n        borderRadius=\"lg\"\r\n        borderColor=\"rgba(255, 0, 17, 0.3)\"\r\n      >\r\n        <Heading size=\"lg\">Ulubieni zawodnicy</Heading>\r\n        <FavouritePlayersBar\r\n          addFavouritePlayer={(player) => {\r\n            if (!favouritePlayers.find((fav) => fav.id === player.id)) {\r\n              addFavouritePlayer(user.id, player.id).then(() => {\r\n                setFavouritePlayers([...favouritePlayers, player]);\r\n              });\r\n            }\r\n          }}\r\n        />\r\n        <Box>\r\n          {favouritePlayers.map((favouritePlayer) => {\r\n            return (\r\n              <Button\r\n                key={favouritePlayer.id}\r\n                margin={2}\r\n                rightIcon={<CloseIcon boxSize={3} />}\r\n                minWidth=\"250px\"\r\n                colorScheme=\"pink\"\r\n                variant=\"outline\"\r\n                onClick={() =>\r\n                  deleteFavouritePlayer(user.id, favouritePlayer.id).then(\r\n                    () => {\r\n                      setFavouritePlayers(\r\n                        favouritePlayers.filter(\r\n                          (player) => player.id !== favouritePlayer.id\r\n                        )\r\n                      );\r\n                    }\r\n                  )\r\n                }\r\n              >\r\n                {`${favouritePlayer.first_name} ${favouritePlayer.last_name}`}\r\n              </Button>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AccountLayout;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\PlayersLayout.js",["234"],"import React from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport SingleGamesTable from \"./SingleGamesTable\";\r\nimport SeasonAveragesTable from \"./SeasonAveragesTable\";\r\nimport {\r\n  Box,\r\n  Tabs,\r\n  TabList,\r\n  TabPanels,\r\n  Tab,\r\n  TabPanel,\r\n  HStack,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport SelectedPlayers from \"./SelectedPlayers\";\r\nimport SingleGamesChart from \"./SingleGamesChart\";\r\nimport { getSinglePlayerStats } from \"../../Api\";\r\n\r\nconst PlayersLayout = () => {\r\n  const [selectedPlayers, setSelectedPlayers] = React.useState([]);\r\n  return (\r\n    <Box>\r\n      <HStack margin={5}>\r\n        <SearchBar\r\n          selectPlayer={(player) => {\r\n            if (!selectedPlayers.find((p) => p.id === player.id)) {\r\n              setSelectedPlayers([...selectedPlayers, player]);\r\n            }\r\n          }}\r\n          selectPlayers={(players) => {\r\n            setSelectedPlayers([\r\n              ...selectedPlayers,\r\n              ...players.filter(\r\n                (player) =>\r\n                  !selectedPlayers.some(\r\n                    (selectedPlayer) => selectedPlayer.id === player.id\r\n                  )\r\n              ),\r\n            ]);\r\n          }}\r\n        />\r\n        <Spacer />\r\n        <SelectedPlayers\r\n          selectedPlayers={selectedPlayers}\r\n          deselectPlayer={(player) => {\r\n            setSelectedPlayers(\r\n              selectedPlayers.filter((p) => p.id !== player.id)\r\n            );\r\n          }}\r\n        />\r\n      </HStack>\r\n      {!!selectedPlayers.length && (\r\n        <Tabs isFitted variant=\"enclosed\">\r\n          <TabList mb=\"1em\">\r\n            <Tab>Statystyki z ostatnich meczy</Tab>\r\n            <Tab>Statystyki kariery</Tab>\r\n            <Tab>Wykres z ostatnich meczy</Tab>\r\n          </TabList>\r\n          <TabPanels>\r\n            <TabPanel>\r\n              <SingleGamesTable selectedPlayers={selectedPlayers} />\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <SeasonAveragesTable selectedPlayers={selectedPlayers} />\r\n            </TabPanel>\r\n            <TabPanel height=\"600px\">\r\n              <SingleGamesChart selectedPlayers={selectedPlayers} />\r\n            </TabPanel>\r\n          </TabPanels>\r\n        </Tabs>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PlayersLayout;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\CalendarLayout.js",["235","236","237"],"import { Box, HStack, Spacer } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport CalendarNavBar from \"./CalendarNavBar\";\r\nimport Day from \"./Day\";\r\nimport { getAllTeams, getTeamsMatchesInTimePeriod } from \"../../Api\";\r\nimport TeamFilterBar from \"./TeamFilterBar\";\r\nimport SelectedTeams from \"./SelectedTeams\";\r\n\r\nDate.prototype.addDays = function (days) {\r\n  var date = new Date(this.valueOf());\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n};\r\n\r\nfunction getMonday(d) {\r\n  d = new Date(d);\r\n  var day = d.getDay(),\r\n    diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\r\n  return new Date(d.setDate(diff));\r\n}\r\n\r\nconst sDate = getMonday(new Date());\r\nconst eDate = new Date(sDate).addDays(7);\r\n\r\nconst filterMatchesFromSingleDay = (matches, day) => {\r\n  return matches.filter((match) => {\r\n    return (\r\n      new Date(match.match_date).toLocaleDateString() ===\r\n      day.toLocaleDateString()\r\n    );\r\n  });\r\n};\r\n\r\nconst helperArray = [0, 1, 2, 3, 4, 5, 6];\r\n\r\nconst CalendarLayout = () => {\r\n  const [weeklyMatches, setWeeklyMatches] = React.useState([]);\r\n  const [selectedTeams, setSelectedTeams] = React.useState([]);\r\n  const [startDate, setStartDate] = React.useState(sDate);\r\n  const [endDate, setEndDate] = React.useState(eDate);\r\n\r\n  const [teams, setTeams] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    getAllTeams().then((response) => setTeams(response.data));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getTeamsMatchesInTimePeriod(\r\n      new Date(startDate).toISOString().split(\"T\")[0],\r\n      new Date(endDate).toISOString().split(\"T\")[0],\r\n      selectedTeams\r\n    ).then((response) => {\r\n      setWeeklyMatches(response.data);\r\n    });\r\n  }, [selectedTeams]);\r\n\r\n  return (\r\n    <Box>\r\n      <HStack margin={5}>\r\n        <TeamFilterBar\r\n          teams={teams}\r\n          selectTeam={(teamID) => {\r\n            if (!selectedTeams.find((t) => t.id === Number(teamID))) {\r\n              debugger;\r\n              setSelectedTeams([\r\n                ...selectedTeams,\r\n                teams.find((t) => t.id === Number(teamID)),\r\n              ]);\r\n            }\r\n          }}\r\n          selectTeams={(teams) => {\r\n            setSelectedTeams([\r\n              ...selectedTeams,\r\n              ...teams.filter(\r\n                (team) =>\r\n                  !selectedTeams.some(\r\n                    (selectedTeam) => selectedTeam.id === team.id\r\n                  )\r\n              ),\r\n            ]);\r\n          }}\r\n        />\r\n        <Spacer />\r\n        <SelectedTeams\r\n          selectedTeams={selectedTeams}\r\n          deselectTeam={(team) => {\r\n            setSelectedTeams(selectedTeams.filter((t) => t.id !== team.id));\r\n          }}\r\n        />\r\n      </HStack>\r\n      <CalendarNavBar\r\n        forwardClick={() => {\r\n          setStartDate(new Date(startDate).addDays(7));\r\n          setEndDate(new Date(endDate).addDays(7));\r\n\r\n          getTeamsMatchesInTimePeriod(\r\n            new Date(startDate).addDays(7).toISOString().split(\"T\")[0],\r\n            new Date(endDate).addDays(7).toISOString().split(\"T\")[0],\r\n            selectedTeams\r\n          ).then((response) => setWeeklyMatches(response.data));\r\n        }}\r\n        backClick={() => {\r\n          setStartDate(new Date(startDate).addDays(-7));\r\n          setEndDate(new Date(endDate).addDays(-7));\r\n          getTeamsMatchesInTimePeriod(\r\n            new Date(startDate).addDays(-7).toISOString().split(\"T\")[0],\r\n            new Date(endDate).addDays(-7).toISOString().split(\"T\")[0],\r\n            selectedTeams\r\n          ).then((response) => setWeeklyMatches(response.data));\r\n        }}\r\n        startDate={startDate}\r\n        endDate={endDate.addDays(-1)}\r\n      />\r\n\r\n      {helperArray.map((i) => {\r\n        return (\r\n          <Day\r\n            key={i}\r\n            date={new Date(startDate).addDays(i)}\r\n            matches={filterMatchesFromSingleDay(\r\n              weeklyMatches,\r\n              new Date(startDate).addDays(i)\r\n            )}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CalendarLayout;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\SingleArticleLayout.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\SingleArticleView.js",["238"],"import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Heading,\r\n  Stack,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Flex,\r\n  Spacer,\r\n} from \"@chakra-ui/react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport { getArticleByID, getArticleImage, addComment } from \"../../Api\";\r\n\r\nconst SingleArticleView = () => {\r\n  const [article, setArticle] = React.useState();\r\n  const [articleImage, setArticleImage] = React.useState([]);\r\n  const [shouldReload, setShouldReload] = React.useState(false);\r\n  const { id } = useParams();\r\n  React.useEffect(() => {\r\n    getArticleByID(id).then((response) => {\r\n      setArticle(response.data);\r\n    });\r\n    getArticleImage(id).then((response) => {\r\n      setArticleImage(response.data);\r\n    });\r\n  }, [id, shouldReload]);\r\n  return (\r\n    <Stack margin={5} padding=\"2px\" p={5} shadow=\"md\" borderWidth=\"1px\">\r\n      <Flex textAlign=\"left\" padding=\"2px\">\r\n        <Text>Opublikowane przez: {article?.publicist.login}</Text>\r\n        <Spacer />\r\n        <Text fontWeight=\"semibold\" fontSize=\"lg\">\r\n          {article?.dateOfPublication.split(\"T\")[0]}\r\n        </Text>\r\n      </Flex>\r\n      <Heading>{article?.title}</Heading>\r\n      <Divider />\r\n      <Flex boxSize=\"m\" margin={5} width=\"100%\" bg=\"black\" alignItems=\"center\">\r\n        <Spacer />\r\n        <Image src={articleImage[0]?.url} alt={articleImage[0]?.name} />\r\n        <Spacer />\r\n      </Flex>\r\n      <Text textAlign=\"justify\" padding={5}>\r\n        {article?.content}\r\n      </Text>\r\n      <CommentsList\r\n        comments={article?.comments ?? []}\r\n        shouldReload={() => {\r\n          setShouldReload(!shouldReload);\r\n        }}\r\n        addComment={(...args) => {\r\n          addComment(...args).then(() => setShouldReload(!shouldReload));\r\n        }}\r\n      />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SingleArticleView;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\CommentsList.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\Comment.js",["239","240","241","242","243","244","245","246","247","248"],"import React from \"react\";\r\nimport {\r\n  Stack,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Grid,\r\n  GridItem,\r\n  IconButton,\r\n  HStack,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure,\r\n  Button,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n} from \"@chakra-ui/react\";\r\nimport { DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport DeleteCommentAlert from \"./DeleteCommentAlert\";\r\nimport { deleteComment, editComment } from \"../../Api\";\r\nimport { UserContext } from \"../../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Comment = (props) => {\r\n  const { author, content, id: commmentID } = props.comment;\r\n  const [isEditing, setEditing] = React.useState(false);\r\n  const [isDeleting, setDeleting] = React.useState(false);\r\n  const [commentValue, setCommentValue] = React.useState(content);\r\n  const { user } = React.useContext(UserContext);\r\n  const { id: articleID } = useParams();\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        templateColumns=\"repeat(6, 1fr)\"\r\n        gap={4}\r\n        margin=\"5px\"\r\n        p={5}\r\n        shadow=\"md\"\r\n        borderWidth=\"1px\"\r\n      >\r\n        <GridItem colSpan={5}>\r\n          <Stack>\r\n            <Box textAlign=\"left\">\r\n              <Heading fontSize=\"l\">{author.login}</Heading>\r\n              {isEditing ? (\r\n                <>\r\n                  <Textarea\r\n                    value={commentValue}\r\n                    minHeight=\"100px\"\r\n                    onChange={(event) => setCommentValue(event.target.value)}\r\n                  />\r\n                  <Button\r\n                    colorScheme=\"blue\"\r\n                    marginRight=\"5px\"\r\n                    onClick={() => {\r\n                      editComment(user?.id, commmentID, {\r\n                        content: commentValue,\r\n                        article: Number(articleID),\r\n                        author: author.id,\r\n                        dateOfPublication: new Date().toISOString(),\r\n                      }).then(() => props.reload());\r\n                      setEditing(false);\r\n                    }}\r\n                  >\r\n                    Zapisz\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setEditing(false);\r\n                    }}\r\n                  >\r\n                    Anuluj\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <Text textAlign=\"justify\">{commentValue}</Text>\r\n              )}\r\n            </Box>\r\n          </Stack>\r\n        </GridItem>\r\n        <GridItem colSpan={1}>\r\n          {user !== null && user.id === author.id && (\r\n            <HStack margin=\"15px\">\r\n              <IconButton\r\n                variant=\"outline\"\r\n                colorScheme=\"blue\"\r\n                disabled={isEditing}\r\n                icon={<EditIcon />}\r\n                onClick={() => setEditing(true)}\r\n              />\r\n\r\n              <IconButton\r\n                variant=\"outline\"\r\n                colorScheme=\"red\"\r\n                disabled={isEditing}\r\n                onClick={() => setDeleting(true)}\r\n                icon={<DeleteIcon />}\r\n              />\r\n            </HStack>\r\n          )}\r\n        </GridItem>\r\n      </Grid>\r\n      <DeleteCommentAlert\r\n        isOpen={isDeleting}\r\n        cancel={() => {\r\n          console.log(\"canceled!\");\r\n          setDeleting(false);\r\n        }}\r\n        delete={() => {\r\n          deleteComment(user?.id, commmentID).then(() => props.reload());\r\n          // window.location.reload();\r\n          setDeleting(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\DeleteCommentAlert.js",[],["249","250"],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\SingleArticleLayout\\AddComment.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SingleGamesTable.js",["251"],"import React from \"react\";\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Flex,\r\n  Heading,\r\n  Select,\r\n  StatNumber,\r\n  StatArrow,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { comparePlayers } from \"../../Api\";\r\n\r\nconst seasons = [2020];\r\n\r\nconst SingleGamesTable = (props) => {\r\n  const [selectedPlayer, setSelectedPlayer] = React.useState([]);\r\n  const [playersData, setPlayersData] = React.useState([]);\r\n  const [selectedSeason, setSelectedSeason] = React.useState(seasons[0]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.selectedPlayers.length !== 0) {\r\n      comparePlayers(\r\n        props.selectedPlayers.map((player) => player.id),\r\n        10,\r\n        selectedSeason\r\n      ).then((response) => {\r\n        setPlayersData(response.data);\r\n        setSelectedPlayer(response.data[0]);\r\n      });\r\n    }\r\n  }, [props.selectedPlayers, selectedSeason]);\r\n\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Text flex=\"2\" fontWeight=\"semibold\" fontSize=\"3xl\">\r\n          Ostatnie 10 spotkań\r\n        </Text>\r\n        <Select\r\n          flex=\"1\"\r\n          onChange={(event) => {\r\n            setSelectedPlayer(\r\n              playersData.find((games) => {\r\n                return games[0]?.player.id === Number(event.target.value);\r\n              }) ?? []\r\n            );\r\n          }}\r\n        >\r\n          {props.selectedPlayers.map((player) => {\r\n            return (\r\n              <option\r\n                // selected={selectedPlayer.id === player.id}\r\n                value={player.id}\r\n                key={player.id}\r\n              >{`${player.first_name} ${player.last_name}`}</option>\r\n            );\r\n          })}\r\n        </Select>\r\n        <Select\r\n          flex=\"1\"\r\n          onChange={(event) => {\r\n            setSelectedSeason(event.target.value);\r\n          }}\r\n        >\r\n          {seasons.map((season) => {\r\n            return (\r\n              <option value={season} key={season}>\r\n                {season}\r\n              </option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </Flex>\r\n\r\n      <Table variant=\"simple\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th>Mecz</Th>\r\n            <Th>Czas na boisku</Th>\r\n            <Th>Punkty</Th>\r\n            <Th>Asysty</Th>\r\n            <Th>Zbiórki</Th>\r\n            <Th>Przechwyty</Th>\r\n            <Th>Bloki</Th>\r\n            <Th>Skuteczność</Th>\r\n          </Tr>\r\n        </Thead>\r\n        {selectedPlayer === undefined ? (\r\n          <Text>Brak danych</Text>\r\n        ) : (\r\n          <Tbody>\r\n            {selectedPlayer.map((fixture, index) => {\r\n              return (\r\n                <Tr\r\n                  key={fixture.id}\r\n                  backgroundColor={\r\n                    index % 2 === 0 ? \"\" : \"rgba(199, 199, 199, 0.2)\"\r\n                  }\r\n                >\r\n                  <Td>\r\n                    {`${fixture.game.homeTeam.abbreviation} vs ${fixture.game.visitorTeam.abbreviation}`}\r\n                    , {fixture.game.match_date.split(\"T\")[0]}\r\n                  </Td>\r\n                  <Td>{fixture.min === \"\" ? \"00:00\" : fixture.min}</Td>\r\n                  <Td>{fixture.pts}</Td>\r\n                  <Td>{fixture.ast}</Td>\r\n                  <Td>{fixture.reb}</Td>\r\n                  <Td>{fixture.stl}</Td>\r\n                  <Td>{fixture.blk}</Td>\r\n                  <Td>\r\n                    <StatNumber>\r\n                      {Math.round(fixture.fg_pct * 100) / 100}%{\" \"}\r\n                      <StatArrow\r\n                        type={\r\n                          Number(fixture.fg_pct) >= 42 ? \"increase\" : \"decrease\"\r\n                        }\r\n                      />\r\n                    </StatNumber>\r\n                  </Td>\r\n                </Tr>\r\n              );\r\n            })}\r\n          </Tbody>\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleGamesTable;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SearchBar.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\hooks\\useOutsideClick.js",["252"],"import React from \"react\";\r\n\r\nexport function useOutsideClick(ref, callback) {\r\n  React.useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        callback();\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n}\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SelectedPlayers.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SeasonAveragesTable.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\SingleGamesChart.js",["253","254","255"],"import React from \"react\";\r\nimport SingleGamesTable from \"./SingleGamesTable\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport { comparePlayers } from \"../../Api\";\r\nimport ChartFilters from \"./ChartFilters\";\r\nimport { Select } from \"@chakra-ui/react\";\r\nimport { stats } from \"../../../assets/stats\";\r\n\r\nconst normalizeData = (response, stat) => {\r\n  return response.map((playerGames) => {\r\n    const data = playerGames.map((game, index) => {\r\n      return { y: game[stat], x: index + 1 };\r\n    });\r\n    debugger;\r\n    return {\r\n      id: `${playerGames[0].player.firstName} ${playerGames[0].player.lastName}`,\r\n      data,\r\n    };\r\n  });\r\n};\r\n\r\nconst matchesAmount = 10;\r\nconst currentSeason = 2020;\r\n\r\nconst mapStatFields = (game) => {\r\n  const forDeletion = [\"id\", \"player\", \"game\", \"season\"];\r\n  return Object.keys(game).filter((field) => !forDeletion.includes(field));\r\n};\r\n\r\nconst SingleGamesChart = (props) => {\r\n  const [playersData, setPlayersData] = React.useState([]);\r\n  const [chartData, setChartData] = React.useState([]);\r\n  const [selectedStat, setSelectedStat] = React.useState();\r\n  const [statFields, setStatFields] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    if (props.selectedPlayers.length !== 0) {\r\n      comparePlayers(\r\n        props.selectedPlayers.map((player) => player.id),\r\n        matchesAmount,\r\n        currentSeason\r\n      ).then((response) => {\r\n        debugger;\r\n        if (!response.data.some((playerGames) => playerGames.length === 0)) {\r\n          setPlayersData(response.data);\r\n          setChartData(normalizeData(response.data, selectedStat));\r\n          setStatFields(mapStatFields(response.data[0][0]));\r\n        }\r\n      });\r\n    }\r\n  }, [props.selectedPlayers]);\r\n\r\n  return (\r\n    <>\r\n      <Select\r\n        width=\"20%\"\r\n        onChange={(event) => {\r\n          setSelectedStat(event.target.value);\r\n          setChartData(normalizeData(playersData, event.target.value));\r\n        }}\r\n      >\r\n        {statFields.map((field) =>\r\n          field !== \"min\" ? (\r\n            <option value={field}>\r\n              {stats.filter((stat) => stat.name === field)[0].value}\r\n            </option>\r\n          ) : null\r\n        )}\r\n      </Select>\r\n      <ResponsiveLine\r\n        data={chartData}\r\n        margin={{ top: 50, right: 150, bottom: 50, left: 60 }}\r\n        xScale={{ type: \"point\" }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: 0,\r\n          max: \"auto\",\r\n          stacked: false,\r\n          reverse: false,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n          orient: \"bottom\",\r\n          tickSize: 10,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n          legend: \"Ostatnie mecze\",\r\n          legendOffset: 36,\r\n          legendPosition: \"middle\",\r\n        }}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 10,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n        }}\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n          {\r\n            anchor: \"bottom-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 100,\r\n            translateY: 0,\r\n            itemsSpacing: 0,\r\n            itemDirection: \"left-to-right\",\r\n            itemWidth: 80,\r\n            itemHeight: 20,\r\n            itemOpacity: 0.75,\r\n            symbolSize: 12,\r\n            symbolShape: \"circle\",\r\n            symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n          },\r\n        ]}\r\n        curve=\"monotoneX\"\r\n        enableGridX={false}\r\n        animate=\"true\"\r\n        enableSlices=\"x\"\r\n        sliceTooltip={({ slice }) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                background: \"white\",\r\n                padding: \"9px 12px\",\r\n                border: \"1px solid #ccc\",\r\n              }}\r\n            >\r\n              {slice.points.map((point) => (\r\n                <div\r\n                  key={point.id}\r\n                  style={{\r\n                    color: point.serieColor,\r\n                    padding: \"3px 0\",\r\n                  }}\r\n                >\r\n                  <strong>{point.serieId}</strong>: {point.data.yFormatted}{\" \"}\r\n                  {selectedStat}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleGamesChart;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\PlayersLayout\\ChartFilters.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\SignUpDrawer.js",["256"],"import {\r\n  Box,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerCloseButton,\r\n  DrawerContent,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  Text,\r\n  FormControl,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { checkEmail, checkLogin, createUserAccount } from \"../../Api\";\r\nimport { UserContext } from \"../../../App\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nconst role = \"User\";\r\nconst loginErrorMessage = \"Użytkownik o takiej nazwie już istnieje!\";\r\nconst emailDuplicateErrorMessage =\r\n  \"Użytkownik o podanym adresie email już istnieje!\";\r\nconst emailRegexErrorMessage = \"Zły format adresu email!\";\r\nconst passwordRegexErrorMessage =\r\n  \"Hasło musi zawierać przynajmniej 6 znaków, w tym cyfrę!\";\r\nconst repeatPasswordErrorMessage = \"Podane hasła muszą być identyczne!\";\r\nconst regex = /^(?=.*[0-9])[a-zA-Z0-9]{6,16}$/;\r\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\nconst checkPasswordRepeat = (password, repeatPassword) => {\r\n  return password !== repeatPassword;\r\n};\r\n\r\nconst checkPassword = (password) => {\r\n  return !regex.test(password);\r\n};\r\n\r\nconst checkEmailRegex = (email) => {\r\n  return !emailRegex.test(email);\r\n};\r\n\r\nconst SignUpDrawer = (props) => {\r\n  const { setUser } = React.useContext(UserContext);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [showPasswordRepeat, setShowPasswordRepeat] = React.useState(false);\r\n\r\n  const [login, setLogin] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [passwordRepeat, setPasswordRepeat] = React.useState(\"\");\r\n\r\n  const [loginError, setLoginError] = React.useState(false);\r\n  const [emailRegexError, setEmailRegexError] = React.useState(false);\r\n  const [emailDuplicateError, setEmailDuplicateError] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n  const [passwordRepeatError, setPasswordRepeatError] = React.useState(false);\r\n\r\n  const [recaptchaValue, setRecaptchaValue] = React.useState(false);\r\n\r\n  const recaptchaRef = React.createRef();\r\n\r\n  const handleClickP = () => setShowPassword(!showPassword);\r\n  const handleClickPR = () => setShowPasswordRepeat(!showPasswordRepeat);\r\n  const toast = useToast();\r\n\r\n  const isLoginInDB = (login) => {\r\n    checkLogin(login).then((response) => {\r\n      setLoginError(response.data);\r\n    });\r\n  };\r\n  const isEmailInDB = (email) => {\r\n    checkEmail(email).then((response) => {\r\n      setEmailDuplicateError(response.data);\r\n    });\r\n  };\r\n\r\n  const clearState = () => {\r\n    setLogin(\"\");\r\n    setLoginError(false);\r\n    setEmail(\"\");\r\n    setEmailDuplicateError(false);\r\n    setEmailRegexError(false);\r\n    setPassword(\"\");\r\n    setPasswordError(false);\r\n    setPasswordRepeat(\"\");\r\n    setPasswordRepeatError(false);\r\n  };\r\n\r\n  const createUser = () => {\r\n    console.log(\"OKIEJ\");\r\n    createUserAccount({\r\n      login: login,\r\n      password: password,\r\n      role: \"User\",\r\n      email: email,\r\n    })\r\n      .then((response) => {\r\n        setUser(response.data.result ?? null);\r\n        if (response.data.result !== null) {\r\n          localStorage.setItem(\r\n            \"nbaAppUser\",\r\n            JSON.stringify(response.data.result)\r\n          );\r\n        }\r\n        toast({\r\n          title: \"Konto zostało stworzone!\",\r\n          description: \"Zostałeś automatycznie zalogowany\",\r\n          status: \"success\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        toast({\r\n          title: \"Błąd po stronie serwera\",\r\n          description: \"Spróbuj ponownie\",\r\n          status: \"error\",\r\n          duration: 9000,\r\n          isClosable: true,\r\n        });\r\n      });\r\n  };\r\n\r\n  const firstField = React.useRef();\r\n  return (\r\n    <Drawer\r\n      isOpen={props.isOpen}\r\n      placement=\"right\"\r\n      initialFocusRef={firstField}\r\n      onClose={() => props.closeDrawer()}\r\n    >\r\n      <DrawerOverlay>\r\n        <DrawerContent>\r\n          <DrawerCloseButton\r\n            onClick={() => {\r\n              clearState();\r\n              props.closeDrawer();\r\n            }}\r\n          />\r\n          <DrawerHeader borderBottomWidth=\"1px\">Utwórz konto</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            <Stack spacing=\"24px\">\r\n              <Box>\r\n                <FormControl id=\"login\" isRequired>\r\n                  <FormLabel htmlFor=\"login\">Użytkownik</FormLabel>\r\n                  <Box>\r\n                    <Input\r\n                      ref={firstField}\r\n                      id=\"username\"\r\n                      type=\"text\"\r\n                      placeholder=\"Wprowadź nazwę użytkownika\"\r\n                      isInvalid={loginError}\r\n                      errorBorderColor=\"crimson\"\r\n                      value={login}\r\n                      onChange={(event) => {\r\n                        setLogin(event.target.value);\r\n                        if (event.target.value.length > 0) {\r\n                          isLoginInDB(event.target.value);\r\n                        }\r\n                      }}\r\n                    />{\" \"}\r\n                    {loginError ? (\r\n                      <Text color=\"tomato\">{loginErrorMessage}</Text>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Box>\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <FormControl id=\"email\" isRequired>\r\n                  <FormLabel htmlFor=\"email\">Adres email</FormLabel>\r\n                  <Box>\r\n                    <Input\r\n                      id=\"email\"\r\n                      placeholder=\"Podaj adres email\"\r\n                      isInvalid={emailRegexError || emailDuplicateError}\r\n                      errorBorderColor=\"crimson\"\r\n                      value={email}\r\n                      onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                        setEmailRegexError(checkEmailRegex(event.target.value));\r\n                        if (event.target.value.length > 0) {\r\n                          isEmailInDB(event.target.value);\r\n                        }\r\n                      }}\r\n                    />{\" \"}\r\n                    {emailRegexError ? (\r\n                      <Text color=\"tomato\">{emailRegexErrorMessage}</Text>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {emailDuplicateError ? (\r\n                      <Text color=\"tomato\">{emailDuplicateErrorMessage}</Text>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Box>\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <FormControl id=\"password\" isRequired>\r\n                  <FormLabel>Hasło</FormLabel>\r\n                  <InputGroup size=\"md\">\r\n                    <Box>\r\n                      <Input\r\n                        pr=\"4.5rem\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        placeholder=\"Wprowadź hasło\"\r\n                        isInvalid={passwordError}\r\n                        errorBorderColor=\"crimson\"\r\n                        value={password}\r\n                        onChange={(event) => {\r\n                          setPassword(event.target.value);\r\n                          setPasswordError(checkPassword(event.target.value));\r\n                        }}\r\n                      />\r\n                      <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleClickP}>\r\n                          {showPassword ? \"Ukryj\" : \"Pokaż\"}\r\n                        </Button>\r\n                      </InputRightElement>{\" \"}\r\n                      {passwordError ? (\r\n                        <Text color=\"tomato\">{passwordRegexErrorMessage}</Text>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Box>\r\n                  </InputGroup>\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <FormControl id=\"passwordRepeat\" isRequired>\r\n                  <FormLabel>Potwierdź hasło</FormLabel>\r\n                  <InputGroup size=\"md\">\r\n                    <Box>\r\n                      <Input\r\n                        pr=\"4.5rem\"\r\n                        type={showPasswordRepeat ? \"text\" : \"password\"}\r\n                        placeholder=\"Potwierdź hasło\"\r\n                        isInvalid={passwordRepeatError}\r\n                        errorBorderColor=\"crimson\"\r\n                        value={passwordRepeat}\r\n                        onChange={(event) => {\r\n                          setPasswordRepeat(event.target.value);\r\n                          setPasswordRepeatError(\r\n                            checkPasswordRepeat(password, event.target.value)\r\n                          );\r\n                        }}\r\n                      />\r\n                      <InputRightElement width=\"4.5rem\">\r\n                        <Button h=\"1.75rem\" size=\"sm\" onClick={handleClickPR}>\r\n                          {showPasswordRepeat ? \"Ukryj\" : \"Pokaż\"}\r\n                        </Button>\r\n                      </InputRightElement>\r\n                      {passwordRepeatError ? (\r\n                        <Text color=\"tomato\">{repeatPasswordErrorMessage}</Text>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Box>\r\n                  </InputGroup>\r\n                </FormControl>\r\n              </Box>\r\n              <Box>\r\n                <ReCAPTCHA\r\n                  sitekey=\"6LfRlSEaAAAAAMAXr_fepzMo7Xkow9f2bLTdlCtk\"\r\n                  size=\"compact\"\r\n                  ref={recaptchaRef}\r\n                  onChange={() => setRecaptchaValue(true)}\r\n                />\r\n              </Box>\r\n            </Stack>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter borderTopWidth=\"1px\">\r\n            <Button\r\n              variant=\"outline\"\r\n              mr={3}\r\n              onClick={() => {\r\n                clearState();\r\n                props.closeDrawer();\r\n              }}\r\n            >\r\n              Anuluj\r\n            </Button>\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              onClick={() => {\r\n                createUser();\r\n                clearState();\r\n                props.closeDrawer();\r\n              }}\r\n              disabled={\r\n                emailRegexError ||\r\n                emailDuplicateError ||\r\n                loginError ||\r\n                passwordError ||\r\n                passwordRepeatError ||\r\n                email === \"\" ||\r\n                password === \"\" ||\r\n                login === \"\" ||\r\n                passwordRepeat === \"\" ||\r\n                recaptchaValue === false\r\n              }\r\n            >\r\n              Zatwierdź\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </DrawerOverlay>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SignUpDrawer;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\LogInDrawer.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\CalendarNavBar.js",["257"],"import React from \"react\";\r\nimport { Flex, Box, Spacer, Button, Heading } from \"@chakra-ui/react\";\r\nimport { ArrowForwardIcon, ArrowBackIcon } from \"@chakra-ui/icons\";\r\n\r\nconst CalendarNavBar = (props) => {\r\n  return (\r\n    <Flex margin={5}>\r\n      <Spacer />\r\n      <Button\r\n        leftIcon={<ArrowBackIcon />}\r\n        colorScheme=\"pink\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          props.backClick();\r\n        }}\r\n      >\r\n        Poprzedni tydzień\r\n      </Button>\r\n      <Heading marginLeft={5} marginRight={5}>\r\n        {props.startDate.toLocaleDateString()} -{\" \"}\r\n        {props.endDate.toLocaleDateString()}\r\n      </Heading>\r\n      <Button\r\n        rightIcon={<ArrowForwardIcon />}\r\n        colorScheme=\"pink\"\r\n        variant=\"outline\"\r\n        onClick={() => {\r\n          props.forwardClick();\r\n        }}\r\n      >\r\n        Następny tydzień\r\n      </Button>\r\n      <Spacer />\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default CalendarNavBar;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\Match.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\Day.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\SelectedTeams.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\CalendarLayout\\TeamFilterBar.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\containers\\NotAuthorized.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\FavouriteTeamsBar.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\AccountLayout\\FavouritePlayersBar.js",["258"],"import { SearchIcon } from \"@chakra-ui/icons\";\r\nimport {\r\n  Box,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  Stack,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { getPlayersByName } from \"../../Api\";\r\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\r\n\r\nconst FavouritePlayesBar = (props) => {\r\n  const [searchValue, setSearchValue] = React.useState(\"\");\r\n  const [players, setPlayers] = React.useState([]);\r\n  const [stackVisible, setStackVisible] = React.useState(false);\r\n  const wrapperRef = React.useRef(null);\r\n  useOutsideClick(wrapperRef, () => {\r\n    setStackVisible(false);\r\n  });\r\n  return (\r\n    <>\r\n      <Box padding={0} ref={wrapperRef} position=\"relative\">\r\n        <InputGroup>\r\n          <InputLeftElement\r\n            pointerEvents=\"none\"\r\n            children={<SearchIcon color=\"gray.300\" />}\r\n          />\r\n          <Input\r\n            placeholder=\"Wyszukaj zawodnika\"\r\n            type=\"text\"\r\n            value={searchValue}\r\n            onChange={(event) => {\r\n              setSearchValue(event.target.value);\r\n              if (event.target.value.length >= 3) {\r\n                getPlayersByName(event.target.value).then((response) => {\r\n                  setPlayers(response.data.result);\r\n                  setStackVisible(true);\r\n                });\r\n              } else {\r\n                setStackVisible(false);\r\n              }\r\n            }}\r\n            onClick={() =>\r\n              searchValue.length >= 3\r\n                ? setStackVisible(true)\r\n                : setStackVisible(false)\r\n            }\r\n          />\r\n        </InputGroup>\r\n        <Stack\r\n          spacing={0}\r\n          align=\"stretch\"\r\n          width=\"100%\"\r\n          borderWidth=\"1px\"\r\n          borderColor=\"gray.200\"\r\n          maxHeight=\"300px\"\r\n          overflow=\"auto\"\r\n          display={stackVisible ? \"block\" : \"none\"}\r\n          position=\"absolute\"\r\n          zIndex={1}\r\n        >\r\n          {players.map((player) => {\r\n            return (\r\n              <Box\r\n                key={player.id}\r\n                cursor=\"pointer\"\r\n                padding=\"5px\"\r\n                background=\"white\"\r\n                _hover={{\r\n                  background: \"gray.50\",\r\n                }}\r\n                onClick={() => {\r\n                  props.addFavouritePlayer(player);\r\n                  setSearchValue(\"\");\r\n                  setStackVisible(false);\r\n                }}\r\n              >\r\n                {`${player.first_name} ${player.last_name}`}\r\n              </Box>\r\n            );\r\n          })}\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FavouritePlayesBar;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\NewArticleLayout.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\ManageArticlesLayout.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\EditDeleteArticle.js",["259","260","261","262"],"import {\r\n  Avatar,\r\n  Text,\r\n  Grid,\r\n  Box,\r\n  GridItem,\r\n  Heading,\r\n  Flex,\r\n  WrapItem,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { getArticlesByAuthor, deleteArticle } from \"../../Api\";\r\nimport ArticleToEditView from \"./ArticleToEditView\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nconst EditDeleteArticle = (props) => {\r\n  const [articles, setArticles] = React.useState([]);\r\n  const [selectedArticle, setSelectedArticle] = React.useState();\r\n  const { user } = React.useContext(UserContext);\r\n\r\n  React.useEffect(() => {\r\n    getArticlesByAuthor(user.id).then((response) => {\r\n      setArticles(response.data);\r\n    });\r\n  }, [props.counter]);\r\n\r\n  return (\r\n    <Grid h=\"200px\" templateColumns=\"repeat(3, 1fr)\" gap={4}>\r\n      <GridItem colSpan={1}>\r\n        {articles.map((article) => {\r\n          return (\r\n            <Flex\r\n              margin={5}\r\n              p={5}\r\n              shadow=\"md\"\r\n              borderWidth=\"1px\"\r\n              key={article.id}\r\n              onClick={() => {\r\n                setSelectedArticle(article);\r\n                console.log(article);\r\n              }}\r\n            >\r\n              <Avatar\r\n                name={article.publicist.login}\r\n                src=\"https://bit.ly/broken-link\"\r\n              />\r\n\r\n              <Heading fontSize=\"l\" marginLeft={2} textAlign=\"left\">\r\n                {article.title}\r\n              </Heading>\r\n            </Flex>\r\n          );\r\n        })}\r\n      </GridItem>\r\n\r\n      <GridItem colSpan={2}>\r\n        <ArticleToEditView\r\n          changeCounter={props.changeCounter}\r\n          article={selectedArticle}\r\n          deleteArticle={(articleID) => {\r\n            deleteArticle(articleID).then(() => {\r\n              setArticles(\r\n                articles.filter((article) => article.id !== Number(articleID))\r\n              );\r\n              setSelectedArticle(undefined);\r\n            });\r\n          }}\r\n        />\r\n      </GridItem>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EditDeleteArticle;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\components\\Layout\\ManageArticlesLayout\\ArticleToEditView.js",["263","264","265"],"import {\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n  Select,\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Spacer,\r\n  useToast,\r\n  AlertDialogOverlay,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialog,\r\n} from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\nimport { getAllCategories, editArticle } from \"../../Api\";\r\nimport { UserContext } from \"../../../App\";\r\n\r\nconst publicistID = 1;\r\n\r\nconst ArticleToEditView = (props) => {\r\n  const [selectedCategory, setSelectedCategory] = React.useState();\r\n  const [title, setTitle] = React.useState();\r\n  const [tags, setTags] = React.useState();\r\n  const [articleContent, setArticleContent] = React.useState();\r\n  const [categories, setCategories] = React.useState([]);\r\n  const [image, setImage] = React.useState();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const { user } = React.useContext(UserContext);\r\n  const cancelRef = React.useRef();\r\n  const toast = useToast();\r\n\r\n  React.useEffect(() => {\r\n    getAllCategories().then((response) => {\r\n      setCategories(response.data);\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (props.article !== undefined) {\r\n      setTitle(props.article.title);\r\n      setArticleContent(props.article.content);\r\n      setTags(props.article.tags);\r\n      setSelectedCategory(props.article.category.id);\r\n    }\r\n  }, [props.article]);\r\n\r\n  const clearState = () => {\r\n    setTitle(\"\");\r\n    setTags(\"\");\r\n    setArticleContent(\"\");\r\n    setCategories([]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box margin={10}>\r\n        <Box width=\"50%\">\r\n          <FormControl id=\"category\" isRequired>\r\n            <FormLabel>Kategoria</FormLabel>\r\n            <Select\r\n              placeholder=\"Wybierz kategorię\"\r\n              onChange={(event) => setSelectedCategory(event.target.value)}\r\n              value={selectedCategory}\r\n            >\r\n              {categories.map((category) => {\r\n                return (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.category}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl id=\"title\" isRequired>\r\n            <FormLabel>Tytuł</FormLabel>\r\n            <Input\r\n              placeholder=\"Tytuł artykułu\"\r\n              onChange={(event) => {\r\n                setTitle(event.target.value);\r\n              }}\r\n              value={title}\r\n            />\r\n          </FormControl>\r\n          <FormControl id=\"tags\" isRequired>\r\n            <FormLabel>Tagi</FormLabel>\r\n            <Input\r\n              placeholder=\"Wpisz tagi oddzielone średnikiem\"\r\n              onChange={(event) => {\r\n                setTags(event.target.value);\r\n              }}\r\n              value={tags}\r\n            />\r\n          </FormControl>\r\n        </Box>\r\n        <FormControl id=\"content\" isRequired>\r\n          <FormLabel>Treść artykułu</FormLabel>\r\n          <Textarea\r\n            minHeight=\"300px\"\r\n            placeholder=\"Treść artykułu\"\r\n            onChange={(event) => {\r\n              setArticleContent(event.target.value);\r\n            }}\r\n            value={articleContent}\r\n          />\r\n        </FormControl>\r\n        <Flex>\r\n          <Button\r\n            colorScheme=\"red\"\r\n            onClick={() => setIsOpen(true)}\r\n            disabled={props.article === undefined}\r\n          >\r\n            Usuń artykuł\r\n          </Button>\r\n          <Spacer />\r\n          <Button\r\n            disabled={props.article === undefined}\r\n            onClick={() => {\r\n              editArticle(props.article.id, {\r\n                publicist: user.id,\r\n                title: title,\r\n                category: {\r\n                  id: Number(selectedCategory),\r\n                },\r\n                tags: tags,\r\n                content: articleContent,\r\n                dateOfPublication: new Date().toISOString(),\r\n              })\r\n                .then(() => {\r\n                  props.changeCounter();\r\n                  toast({\r\n                    title: \"Edytowano artykuł pomyślnie!\",\r\n                    status: \"success\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  });\r\n                })\r\n                .catch(() => {\r\n                  toast({\r\n                    title: \"Edytowanie artykułu nie powiodło się\",\r\n                    description: \"Spróbuj ponownie\",\r\n                    status: \"error\",\r\n                    duration: 9000,\r\n                    isClosable: true,\r\n                  });\r\n                });\r\n            }}\r\n          >\r\n            Zapisz zmiany\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={cancelRef}\r\n        onClose={() => setIsOpen(false)}\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Usuń artykuł\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Czy na pewno chcesz usunąć artykuł? Tej akcji nie można odwrócić.\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button\r\n                ref={cancelRef}\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                }}\r\n                disabled={props.article === undefined}\r\n              >\r\n                Anuluj\r\n              </Button>\r\n              <Button\r\n                colorScheme=\"red\"\r\n                onClick={() => {\r\n                  props.deleteArticle(props.article.id);\r\n                  clearState();\r\n                  setIsOpen(false);\r\n                }}\r\n                ml={3}\r\n              >\r\n                Usuń\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleToEditView;\r\n","D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\assets\\teams.js",[],"D:\\PWR\\INZYNIERKA\\NBA_APP\\NBA_frontend\\nba-app\\src\\assets\\stats.js",[],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":20},{"ruleId":"270","severity":1,"message":"274","line":2,"column":29,"nodeType":"272","messageId":"273","endLine":2,"endColumn":34},{"ruleId":"270","severity":1,"message":"275","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":11},{"ruleId":"270","severity":1,"message":"276","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":7},{"ruleId":"270","severity":1,"message":"277","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":9},{"ruleId":"278","severity":1,"message":"279","line":25,"column":6,"nodeType":"280","endLine":25,"endColumn":8,"suggestions":"281"},{"ruleId":"270","severity":1,"message":"282","line":2,"column":16,"nodeType":"272","messageId":"273","endLine":2,"endColumn":19},{"ruleId":"270","severity":1,"message":"283","line":1,"column":38,"nodeType":"272","messageId":"273","endLine":1,"endColumn":44},{"ruleId":"270","severity":1,"message":"284","line":1,"column":46,"nodeType":"272","messageId":"273","endLine":1,"endColumn":51},{"ruleId":"278","severity":1,"message":"285","line":33,"column":6,"nodeType":"280","endLine":33,"endColumn":8,"suggestions":"286"},{"ruleId":"278","severity":1,"message":"285","line":39,"column":6,"nodeType":"280","endLine":39,"endColumn":8,"suggestions":"287"},{"ruleId":"270","severity":1,"message":"288","line":17,"column":10,"nodeType":"272","messageId":"273","endLine":17,"endColumn":30},{"ruleId":"289","severity":1,"message":"290","line":9,"column":1,"nodeType":"291","messageId":"292","endLine":13,"endColumn":2},{"ruleId":"293","severity":1,"message":"294","line":18,"column":37,"nodeType":"295","messageId":"292","endLine":18,"endColumn":39},{"ruleId":"278","severity":1,"message":"296","line":56,"column":6,"nodeType":"280","endLine":56,"endColumn":21,"suggestions":"297"},{"ruleId":"270","severity":1,"message":"282","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":6},{"ruleId":"270","severity":1,"message":"298","line":11,"column":3,"nodeType":"272","messageId":"273","endLine":11,"endColumn":9},{"ruleId":"270","severity":1,"message":"299","line":12,"column":3,"nodeType":"272","messageId":"273","endLine":12,"endColumn":13},{"ruleId":"270","severity":1,"message":"300","line":13,"column":3,"nodeType":"272","messageId":"273","endLine":13,"endColumn":15},{"ruleId":"270","severity":1,"message":"301","line":14,"column":3,"nodeType":"272","messageId":"273","endLine":14,"endColumn":15},{"ruleId":"270","severity":1,"message":"302","line":15,"column":3,"nodeType":"272","messageId":"273","endLine":15,"endColumn":16},{"ruleId":"270","severity":1,"message":"303","line":16,"column":3,"nodeType":"272","messageId":"273","endLine":16,"endColumn":16},{"ruleId":"270","severity":1,"message":"304","line":17,"column":3,"nodeType":"272","messageId":"273","endLine":17,"endColumn":20},{"ruleId":"270","severity":1,"message":"305","line":18,"column":3,"nodeType":"272","messageId":"273","endLine":18,"endColumn":16},{"ruleId":"270","severity":1,"message":"306","line":20,"column":3,"nodeType":"272","messageId":"273","endLine":20,"endColumn":12},{"ruleId":"270","severity":1,"message":"307","line":21,"column":3,"nodeType":"272","messageId":"273","endLine":21,"endColumn":8},{"ruleId":"266","replacedBy":"308"},{"ruleId":"268","replacedBy":"309"},{"ruleId":"270","severity":1,"message":"310","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":10},{"ruleId":"278","severity":1,"message":"311","line":17,"column":6,"nodeType":"280","endLine":17,"endColumn":11,"suggestions":"312"},{"ruleId":"270","severity":1,"message":"313","line":2,"column":8,"nodeType":"272","messageId":"273","endLine":2,"endColumn":24},{"ruleId":"270","severity":1,"message":"314","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":20},{"ruleId":"278","severity":1,"message":"315","line":51,"column":6,"nodeType":"280","endLine":51,"endColumn":29,"suggestions":"316"},{"ruleId":"270","severity":1,"message":"317","line":25,"column":7,"nodeType":"272","messageId":"273","endLine":25,"endColumn":11},{"ruleId":"270","severity":1,"message":"282","line":2,"column":16,"nodeType":"272","messageId":"273","endLine":2,"endColumn":19},{"ruleId":"270","severity":1,"message":"318","line":8,"column":3,"nodeType":"272","messageId":"273","endLine":8,"endColumn":9},{"ruleId":"270","severity":1,"message":"319","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":7},{"ruleId":"270","severity":1,"message":"282","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":6},{"ruleId":"270","severity":1,"message":"275","line":9,"column":3,"nodeType":"272","messageId":"273","endLine":9,"endColumn":11},{"ruleId":"278","severity":1,"message":"285","line":25,"column":6,"nodeType":"280","endLine":25,"endColumn":21,"suggestions":"320"},{"ruleId":"270","severity":1,"message":"321","line":23,"column":7,"nodeType":"272","messageId":"273","endLine":23,"endColumn":18},{"ruleId":"270","severity":1,"message":"322","line":31,"column":10,"nodeType":"272","messageId":"273","endLine":31,"endColumn":15},{"ruleId":"270","severity":1,"message":"323","line":31,"column":17,"nodeType":"272","messageId":"273","endLine":31,"endColumn":25},"no-native-reassign",["324"],"no-negated-in-lhs",["325"],"no-unused-vars","'RadioGroup' is defined but never used.","Identifier","unusedVar","'Radio' is defined but never used.","'WrapItem' is defined but never used.","'Wrap' is defined but never used.","'HStack' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["326"],"'Box' is defined but never used.","'Select' is defined but never used.","'Stack' is defined but never used.","React Hook React.useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.",["327"],["328"],"'getSinglePlayerStats' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook React.useEffect has missing dependencies: 'endDate' and 'startDate'. Either include them or remove the dependency array.",["329"],"'Drawer' is defined but never used.","'DrawerBody' is defined but never used.","'DrawerFooter' is defined but never used.","'DrawerHeader' is defined but never used.","'DrawerOverlay' is defined but never used.","'DrawerContent' is defined but never used.","'DrawerCloseButton' is defined but never used.","'useDisclosure' is defined but never used.","'FormLabel' is defined but never used.","'Input' is defined but never used.",["324"],["325"],"'Heading' is defined but never used.","React Hook React.useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"'SingleGamesTable' is defined but never used.","'ChartFilters' is defined but never used.","React Hook React.useEffect has a missing dependency: 'selectedStat'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setChartData' needs the current value of 'selectedStat'.",["331"],"'role' is assigned a value but never used.","'Button' is defined but never used.","'Text' is defined but never used.",["332"],"'publicistID' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},"Update the dependencies array to be: [props.id]",{"range":"346","text":"347"},"Update the dependencies array to be: [user.id]",{"range":"348","text":"349"},{"range":"350","text":"349"},"Update the dependencies array to be: [endDate, selectedTeams, startDate]",{"range":"351","text":"352"},"Update the dependencies array to be: [callback, ref]",{"range":"353","text":"354"},"Update the dependencies array to be: [props.selectedPlayers, selectedStat]",{"range":"355","text":"356"},"Update the dependencies array to be: [props.counter, user.id]",{"range":"357","text":"358"},[523,525],"[props.id]",[1036,1038],"[user.id]",[1183,1185],[1722,1737],"[endDate, selectedTeams, startDate]",[501,506],"[callback, ref]",[1703,1726],"[props.selectedPlayers, selectedStat]",[662,677],"[props.counter, user.id]"]